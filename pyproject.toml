[tool.poetry]
name = "docblock"
version = "0.0.2"
description = "Reads and parses documentation from header files in pure Python."
authors = ["Niels Wouda <nielswouda@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/N-Wouda/docblock"
include = [
    "LICENSE.md",
]
packages = [
    {include = "docblock"},
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development",
]

[tool.poetry.urls]
"Tracker" = "https://github.com/N-Wouda/docblock/issues"

[tool.poetry.dependencies]
python = "^3.8, <4.0"
pyparsing = "^3.0.6"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
pytest = ">=6.0.0"
pytest-cov = ">=2.6.1"
codecov = "*"

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79
select = ["E", "F", "I", "NPY", "RET", "RSE", "RUF", "SLF", "SIM", "TCH"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports

[tool.ruff.isort]
case-sensitive = true
known-first-party = ["docblock"]

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--cov=. --cov-report=xml"

[tool.coverage.run]
omit = [
    "docblock/show_versions.py",  # only prints debug information
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    # This excludes all abstract methods from code coverage checks,
    # as they are never instantiated directly anyway
    "pragma: no cover",
    "@abstract"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
